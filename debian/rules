#!/usr/bin/make -f
# -*- makefile -*-
# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

DEB_BUILD_ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)

DEB_VERBOSE_ALL=yes
DEBDIR = ..
CFLAGS = -Wall -Werror -g

comma :=,
empty :=
space := $(empty) $(empty)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
    INSTALL_PROGRAM += -s
endif

TMP_BUILD_OPTS = $(subst $(comma),$(space),$(DEB_BUILD_OPTIONS))

PARALLEL_MAKEFLAGS += 

ifneq (,$(filter parallel=%,$(TMP_BUILD_OPTS)))
         NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(TMP_BUILD_OPTS)))
         PARALLEL_MAKEFLAGS += -j$(NUMJOBS)
endif

# shared library versions, option 1
version=0.1.0
major=0

configure: configure-stamp
configure-stamp:
	dh_testdir
	qmake -recursive $(QMAKE_OPTIONS) 
	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp 
	dh_testdir

	make $(PARALLEL_MAKEFLAGS)
	touch build-stamp

clean:
	dh_testdir
	dh_testroot

	rm -f build-stamp configure-stamp
	make clean || true
	rm -f lib/*
	rm -rf .obj	

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	#dh_clean -k 
	dh_installdirs $(EXCLUSIONS)
	# Add here commands to install the package into debian/tmp
	INSTALL_ROOT=$(CURDIR)/debian/tmp make install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir $(EXCLUSIONS)
	dh_testroot $(EXCLUSIONS)
	dh_installchangelogs  $(EXCLUSIONS)
	dh_installdocs $(EXCLUSIONS)
	dh_install --sourcedir=debian/tmp $(EXCLUSIONS) -v
	dh_link $(EXCLUSIONS)
	dh_compress $(EXCLUSIONS)
	dh_fixperms $(EXCLUSIONS)
	dh_makeshlibs $(EXCLUSIONS)
	dh_installdeb $(EXCLUSIONS)
	dh_shlibdeps $(EXCLUSIONS)
	dh_gencontrol $(EXCLUSIONS)
	dh_md5sums $(EXCLUSIONS)
	dh_builddeb --destdir=$(DEBDIR) $(EXCLUSIONS)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure

# aegis deps
PACKAGE_TARGETS :=  $(foreach pkg,$(DEB_ALL_PACKAGES),binary/$(pkg))
$(PACKAGE_TARGETS)::
	[ ! -f debian/$(notdir $@).aegis ] || aegis-deb-add -control debian/$(notdir $@)/DEBIAN/control .. debian/$(notdir $@).aegis=_aegis

